//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF_Tcp_Client.WCFTcpServer {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCFMessageKind", Namespace="http://schemas.datacontract.org/2004/07/WCF_Tcp_Server")]
    public enum WCFMessageKind : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        State = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Message = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InsertClient = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemoveClient = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFTcpServer.IWCFTcpServer", CallbackContract=typeof(WCF_Tcp_Client.WCFTcpServer.IWCFTcpServerCallback))]
    public interface IWCFTcpServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTcpServer/StartService", ReplyAction="http://tempuri.org/IWCFTcpServer/StartServiceResponse")]
        void StartService();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTcpServer/StartService", ReplyAction="http://tempuri.org/IWCFTcpServer/StartServiceResponse")]
        System.Threading.Tasks.Task StartServiceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTcpServer/StopService", ReplyAction="http://tempuri.org/IWCFTcpServer/StopServiceResponse")]
        void StopService();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTcpServer/StopService", ReplyAction="http://tempuri.org/IWCFTcpServer/StopServiceResponse")]
        System.Threading.Tasks.Task StopServiceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTcpServer/SetDataToServer", ReplyAction="http://tempuri.org/IWCFTcpServer/SetDataToServerResponse")]
        void SetDataToServer(string someStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTcpServer/SetDataToServer", ReplyAction="http://tempuri.org/IWCFTcpServer/SetDataToServerResponse")]
        System.Threading.Tasks.Task SetDataToServerAsync(string someStr);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFTcpServerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFTcpServer/SetDataToClient", ReplyAction="http://tempuri.org/IWCFTcpServer/SetDataToClientResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WCF_Tcp_Client.WCFTcpServer.WCFMessageKind))]
        void SetDataToClient(WCF_Tcp_Client.WCFTcpServer.WCFMessageKind kind, object data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFTcpServerChannel : WCF_Tcp_Client.WCFTcpServer.IWCFTcpServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFTcpServerClient : System.ServiceModel.DuplexClientBase<WCF_Tcp_Client.WCFTcpServer.IWCFTcpServer>, WCF_Tcp_Client.WCFTcpServer.IWCFTcpServer {
        
        public WCFTcpServerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public WCFTcpServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public WCFTcpServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WCFTcpServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WCFTcpServerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void StartService() {
            base.Channel.StartService();
        }
        
        public System.Threading.Tasks.Task StartServiceAsync() {
            return base.Channel.StartServiceAsync();
        }
        
        public void StopService() {
            base.Channel.StopService();
        }
        
        public System.Threading.Tasks.Task StopServiceAsync() {
            return base.Channel.StopServiceAsync();
        }
        
        public void SetDataToServer(string someStr) {
            base.Channel.SetDataToServer(someStr);
        }
        
        public System.Threading.Tasks.Task SetDataToServerAsync(string someStr) {
            return base.Channel.SetDataToServerAsync(someStr);
        }
    }
}
